		.z80
		ASEG
		.RADIX 10
		ORG 100h
		.PHASE 8000h

;                INCLUDE SPRINT01.ASZ

SYS_PAGE	EQU 0FEH
COPY_PAGE1	EQU 04105H
DISK_TYPE	EQU 0C100H	; переадресация дисков

RAMD_KEYS	EQU 0C180H	; ключи RAM-Disks
OPER_DISK	EQU 05CF6H
RAMD_FAT	EQU 0C200H	; расположение блоков RAM-Disk-ов

COM_A	EQU 019H
DAT_A	EQU 018H

PAGE0   EQU 082H
PAGE1   EQU 0A2H
PAGE2   EQU 0C2H
PAGE3   EQU 0E2H

BORDER  EQU 0FEH
RGADR   EQU 089H
RGSCR   EQU 0E9H
RGMOD   EQU 0C9H
RGACC   EQU 0A9H

TABLE_X	EQU 0A000H
TABLE_W	EQU 02000H

BEGIN:
	JP START
	NOP

X_COORD: DW 090*256
Y_COORD: DW 090*256
ANGLE_A: DW -160*32+0C000h
X_SPEED: DW 100H
Y_SPEED: DW 101H
A_SPEED: DW 000H

TABLE_TRACE:
	DS 33		; таблица трассировки/банки таблицы
TABLE_WALL:
	DS 33


START:
	DI
	PUSH IY
	PUSH IX
	EXX
	PUSH HL
	EXX
	LD (SP_+1),SP
	LD SP,0BFFFH

	LD A,2
	LD C,0F2H
	CALL 3D13H

	LD HL,4000H
	LD E,1
	LD B,8
	LD C,80H
	CALL 3D13H

	LD HL,5000H
	LD E,1
	LD B,9
	LD C,80H
	CALL 3D13H

	LD HL,8700H
	LD DE,0
	LD B,0FFH
	LD A,0
	LD C,0A4H
	CALL 3D13H

	LD HL,8700H
	LD DE,0
	LD B,0FFH
	LD A,1
	LD C,0A4H
	CALL 3D13H

	IN A,(PAGE3)
	LD C,0F3h
	CALL 3D13H

	LD A,1
	OUT (RGMOD),A

	IN A,(PAGE3)
	EX AF,AF'
	LD A,40H
	OUT (PAGE3),A
	LD A,0C7H

	LD (0C400H),A	; открыть порт масштабирования
	LD (0C410H),A	; открыть порт масштабирования
	LD (0C480H),A	; открыть порт масштабирования
	LD (0C490H),A	; открыть порт масштабирования
	LD (0C500H),A	; открыть порт масштабирования
	LD (0C510H),A	; открыть порт масштабирования
	LD (0C580H),A	; открыть порт масштабирования
	LD (0C590H),A	; открыть порт масштабирования

	EX AF,AF'
	OUT (PAGE3),A
	EXX
	LD BC,100H	; масштаб 1:1
	LD D,0
	OUT (C),D
	EXX

	CALL MAIN

	LD C,0F0h	; 1 config
	CALL 3D13H

	LD HL,5104H
	LD E,0
	LD B,4
	LD C,80H
	CALL 3D13H

SP_:	LD SP,0
	EXX
	POP HL
	EXX
	POP IX
	POP IY
	EI
	RET

; *********************
; *****   *** *** *****
; ***** ** **  *  *****
; ***** ** ** * * *****
; ***** ** ** *** *****
; *****   *** *** *****
; *********************
; **
; **
; **
; **
; **
; **
; **
; **

MAIN:
DM_CIRCLE:
	CALL INIT_TABLE
	RET C
	CALL RECALC_MAP
	RET C

	LD A,0
	OUT (COM_A),A

	LD A,1
	OUT (COM_A),A
	LD A,0  	; 18H включение прерываний
	OUT (COM_A),A

	LD A,3
	OUT (COM_A),A
	LD A,0C1h
	OUT (COM_A),A

	LD A,4
	OUT (COM_A),A
	LD A,5		; 5 паритет?
	OUT (COM_A),A

        LD A,5
        OUT (COM_A),A
        LD A,060H
        OUT (COM_A),A

	LD A,0
	OUT (0FEH),A

	IN A,(0FBH)
	LD HL,SSS1
	LD DE,1000H
	LD BC,800H
	LDIR
	LD A,0C9H
	LD (38H),A
	LD A,(38H)
	CP 0C9H
	IN A,(7BH)
	SCF
	RET NZ
	IN A,(0FBH)

	CALL INIT_SOUND

DM_LOOP:

;	LD A,(COLOR_HI)
;	INC A
;	LD (COLOR_HI),A

	CALL SOUND

	LD HL,(ANGLE_A)

	LD BC,(LF_)
	LD A,B
	LD B,C
	LD C,A
	INC BC
	LD C,0

	ADD HL,BC
	ADD HL,BC
	ADD HL,BC
	ADD HL,BC

	LD (ANGLE_A),HL

	LD A,H
	ADD A,20+8H

	RRCA
	RRCA
	RRCA
	AND 1EH
	LD C,A
	LD B,0
	LD HL,TAB_ANGLE2
TAB_SPEED EQU $-2

	ADD HL,BC
	LD E,(HL)	; step to Y
	INC L
	LD D,(HL)	; step to X

	LD HL,(Y_COORD)
	PUSH HL

	LD BC,(UP_)
	INC BC
	LD C,0
	LD A,B
	AND A
	JR Z,ZERO1

	LD B,E
	DEC A
	JR Z,ZERO1
	LD A,B
	NEG
	LD B,A

ZERO1:
	ADD HL,BC
	LD (Y_COORD),HL

	ADD HL,BC
	PUSH DE
	CALL MAP_PLACE
	POP DE

	POP HL

	JR NC,CONT_MOVE1

	LD (Y_COORD),HL

CONT_MOVE1:

	LD HL,(X_COORD)

	PUSH HL


	LD BC,(UP_)
	INC BC
	LD C,0
	LD A,B
	AND A
	JR Z,ZERO2

	LD B,D
	DEC A
	JR Z,ZERO2
	LD A,B
	NEG
	LD B,A

ZERO2:
	ADD HL,BC

	LD (X_COORD),HL

	ADD HL,BC

	CALL MAP_PLACE
	POP HL

	JR NC,CONT_MOVE2

	LD (X_COORD),HL

CONT_MOVE2:

	CALL MAP_PLACE

	CALL MAKE_MAP	; соорудить относительную карту

	CALL SOUND

	LD HL,(ANGLE_A)
	LD A,L
	AND 0E0H
	LD L,A
	LD (ANGLE_M),HL

	LD A,(Y_COORD+1)
	AND 3
;	XOR 3
;	XOR C
	LD C,A
	LD A,(X_COORD+1)
	RLCA
	RLCA
	AND 0CH
;	XOR 0CH
	XOR C
	XOR 0FH

	LD C,A
	BIT 7,H
	JR Z,NO_NEG
	XOR 0FH
	LD C,A
NO_NEG:
	BIT 6,H
	JR Z,NO_CORN1

	RRCA
	RRCA
	LD C,A
	RRCA
	RRCA
	RRCA
	RRCA
	OR C

	AND 0FH

KWADR_CONST EQU 03H	; 03H/0CH
	XOR KWADR_CONST
	LD C,A
NO_CORN1:

	LD (CORNER_1),A
	LD B,0
	LD HL,TABLE_TRACE
	ADD HL,BC
	ADD HL,BC
	LD (PLACE_L),HL	; тонкое положение

	CALL SOUND

	CALL TRACE	; прорисовка!

	CALL MAP_OUT

;	EI
;	HALT
;	DI

LOOP_SCR:
	IN A,(0FEH)
	BIT 5,A
	JR NZ,CONT_WORK
	CALL SOUND
	JR LOOP_SCR
CONT_WORK:
	IN A,(RGMOD)
	AND 1
	XOR 1
	OUT (RGMOD),A

	LD DE,0C040H
	JR Z,SET_1
	LD DE,0C180H
SET_1:
	LD (SCREEN_1),DE

	CALL SOUND

	JP DM_LOOP

MAP_OUT:
	CALL MAP_PLACE

	IN A,(PAGE1)
	PUSH AF
	IN A,(PAGE3)
	PUSH AF
	LD A,(TABLE_WALL)
	OUT (PAGE1),A

	RES 4,H
	PUSH HL
	LD A,(HL)
	PUSH AF

	LD (HL),0FEH

	LD HL,4000H
	LD DE,(SCREEN_1)
	LD A,E
	ADD A,8
	LD E,A

MAP_LOOP_2:
	LD A,5CH
	OUT (PAGE3),A

	 LD C,0
	 LD B,1
	 OUT (C),C	; МАСШТАБ 1:1,

	LD C,16
	LD A,008H

MAP_LOOP_1:

	LD D,D
	LD B,0H
	LD L,L
	LD B,(HL)
	INC H
	LD D,D
	LD B,40H
	LD B,B

	OUT (RGADR),A
	LD L,L
	LD (DE),A
	LD B,B
	INC A
	OUT (RGADR),A
	LD L,L
	LD (DE),A
	LD B,B
	INC A
	OUT (RGADR),A
	LD L,L
	LD (DE),A
	LD B,B
	INC A
	OUT (RGADR),A
	LD L,L
	LD (DE),A
	LD B,B
	INC A
	DEC C
	JR NZ,MAP_LOOP_1

	LD BC,240
	EX DE,HL
	ADD HL,BC
	EX DE,HL
	RES 4,H
	BIT 5,H
	SET 5,H
	JR Z,MAP_LOOP_2

	LD A,00
	OUT (RGADR),A

	POP AF
	POP HL
	LD (HL),A

	POP AF
	OUT (PAGE3),A
	POP AF
	OUT (PAGE1),A
	RET

;***************************************
;***************************************
;***************************************

INIT_TABLE:
	LD A,3
	LD C,0CEH	; получить идентификатор блока от рамдиска
	CALL 3D13H
	RET C		; нет рамдиска

	LD HL,TABLE_TRACE
	LD C,0C5H	; получить список страниц блока A
	CALL 3D13H
	RET C
	LD A,B
	CP 32
	SCF
	RET NZ

	LD A,2		; рамдиск стенок и карты
	LD C,0CEH	; получить идентификатор блока от рамдиска
	CALL 3D13H
	RET C		; нет рамдиска

	LD HL,TABLE_WALL
	LD C,0C5H	; получить список страниц блока A
	CALL 3D13H
	RET C
	LD A,B
	CP 33
	CCF
	RET C		; B - размер рамдиска
	DEC A
;	DEC A
	LD (MAP_ELS),A
	AND A
	RET

;****************************
START_POS:
	PUSH HL
	PUSH DE
	PUSH AF

	LD A,L
	ADD A,A
	ADD A,A
	ADD A,2
	LD (X_COORD+1),A

	RL L
	RL H
	RL L
	RL H
	LD A,H
	ADD A,A
	ADD A,A
	ADD A,2
	LD (Y_COORD+1),A

	POP AF
	POP DE
	POP HL
	RET

RECALC_MAP:		; пересчет карты на реальные номера стенок

	IN A,(PAGE1)
	PUSH AF

	LD HL,4000H
	LD A,(TABLE_WALL)
	OUT (PAGE1),A
;	LD IX,TABLE_WALL
	LD A,(HL)
	CP '1'
	JR NZ,NO_PROCESS

RECALC_M2:
	LD A,(HL)	; код стенки
	CP 'S'
	CALL Z,START_POS
	SUB 20H
	JR Z,ZERO_WOLL
	SUB 10H
	JR C,ZERO_WOLL
	CP 15
MAP_ELS EQU $-1
	JR NC,ZERO_WOLL

	PUSH HL
	PUSH BC
	LD HL,TABLE_WALL
	INC A
	LD C,A
	LD B,0
	ADD HL,BC
	LD A,(HL)

;	LD A,(TABLE_WALL+1)

	POP BC
	POP HL

	JR NO_ZERO_W
ZERO_WOLL:
	LD A,0
	BIT 4,H
	JR NZ,NO_ZERO_W
	LD A,0FFH
NO_ZERO_W:
	LD (HL),A
	INC L
	JR NZ,RECALC_M2
	INC H
	BIT 6,H
	JR NZ,RECALC_M2

NO_PROCESS:
	POP AF
	OUT (PAGE1),A
	AND A
	RET

;******************************

;*************************************
SSS1:
	.DEPHASE

	.PHASE 1000H

TRACE:

	IN A,(PAGE1)
	LD (TRACE_RET_PAGE1),A
	IN A,(PAGE3)
	LD (TRACE_RET_PAGE3),A
	LD A,50H
	OUT (PAGE3),A

	EXX
	 LD DE,0C040H		; начало экрана
SCREEN_1 EQU $-2
	 LD C,0
	EXX

	LD HL,0		; начальный угол * 32
ANGLE_M EQU $-2

	LD A,H
	RLCA
	RLCA
	AND 3
	ADD A,TABLE_W/256
	LD D,A		; текущий квадрант

	SET 6,H
	RES 7,H		; HL - на таблице!!!

	LD B,40		; число лучей трассировки деленное на 8

TRACE_NEXT_:

	EXX
	 LD HL,(PLACE_L)		; текущее положение в таблице
	 INC HL
	 LD A,(HL)
	 LD (PLACE_L1),A
	 LD (PLACE_L2),A
	EXX

	LD A,(TABLE_TRACE+10)	; тонкое положение - положение в квадрате
PLACE_L EQU $-2

	OUT (PAGE1),A
	LD (CONT_PAGE),A
	JR TRACE_LOOP

TRACE_LOOP:


	LD E,(HL)	; первый кубик
	LD A,(DE)	; есть или нет?

;	LD A,(TABLE_WALL+6)
;	INC L
;	INC L
;	JR TRACE_CONT; если есть, рисовать!!

	AND A
	JR NZ,TRACE_CONT; если есть, рисовать!!

	INC L

	REPT 15		; повторять еще 15 раз
	LD E,(HL)	; следующий кубик
	LD A,(DE)	; есть или нет?
	AND A
	JR NZ,TRACE_CONT; если есть, рисовать!!
	INC L
	ENDM

PURE_LINE:
	LD A,78H	; пустая стенка
	OUT (RGADR),A
	EXX
	 LD D,D
	 LD A,10H
	 LD B,B
	 LD A,0		; ЦВЕТ ДАЛИ
	 LD E,E
	 LD (DE),A
	 LD D,D
	 LD A,78H
	 LD B,B
	 LD A,(COLOR_LO)
	 LD E,E
	 LD (DE),A
	 LD B,B
	 LD A,(COLOR_HI)
	 LD E,E
	 LD (DE),A
	 LD B,B
	EXX
	JR NEXT_ANGLE

;	трассировка закончена, стены нет.
TRACE_CONT:	; HL - таблица
		; A - номер стенки
;	JP NEXT_ANGLE
;	LD A,(TABLE_WALL+1)

;	INC E
;	DEC E
;	JR Z,PURE_LINE

	EXX
	 EX AF,AF'	;';номер стенки

	 LD A,5
PLACE_L1 EQU $-1
	 OUT (PAGE1),A	; следующее положение в таблице

;	 LD C,0
	 LD B,1
	 OUT (C),C	; МАСШТАБ 1:1,
	EXX

	SET 4,L		;
	LD A,(HL)	; номер линии

	EXX

	 LD H,A
;	 LD L,0
	 LD L,C
	 SET 6,H
	 RES 7,H

	 EX AF,AF'
	 OUT (PAGE1),A	; стенка	стенка раскидана на 16 килобайт

	 LD D,D
	 LD A,40H	; взять 64 байта
	 LD L,L
	 LD A,(HL)	; взять немасштабированно!
	 LD B,B		; стенка в ОЗУ акселератора!

	 LD A,5
PLACE_L2 EQU $-1
	 OUT (PAGE1),A	; следующее положение

	EXX

	RES 4,L         ;
	LD A,(HL)	; A - высота

;	LD A,80H

	EXX
	 LD H,TABLE_X/256
	 LD L,A		; высота TABLE_X - таблица высот
	 LD B,(HL)	; старшая часть коэфициента
;	 ld b,0
	 INC H

	 LD L,(HL)	; младшая часть коэфициента/смещение в стенке
;	 LD C,0
	 OUT (C),L	; масштабирование
;	 OUTI		; B уменьшается сначала!

	 BIT 7,A
	 JR Z,HIGH_1	; 64 точки, не на весь экран

; <64 точки, на весь экран
	 LD D,D
	 LD A,0		; 256 байт
	 LD B,B
	 OUT (RGADR),A	; с самого начала
	 LD A,A
	 LD (DE),A	; ФИГАКС всю линию!!!
	 LD B,B

	EXX
	JR NEXT_ANGLE


HIGH_1:
			; A - высота, с которой рисуется стенка
	 LD D,D
	 LD (DE),A	; число точек потолка и пола!
	 LD B,B
	 NEG		; получить положение начала пола
	 OUT (RGADR),A
	 LD L,A

	 LD A,6 		; цвет пола
COLOR_LO EQU $-1
	 LD E,E
	 LD (DE),A       ; рисовать пол
	 LD B,B
	 LD A,11		; цвет потолка
COLOR_HI EQU $-1
	 LD E,E
	 LD (DE),A       ; рисовать потолок
	 LD B,B

	 LD A,L
;	 IN A,(RGADR)
	 ADD A,A
;	 NEG		; выводимый размер стенки
			; стенка в акселераторе!
	 LD D,D
	 LD (DE),A
	 LD A,A
	 LD (DE),A	; положить стенку!
	 LD B,B

	EXX

NEXT_ANGLE:

	EXX
	 INC DE
	 LD A,E
	 AND 7
	EXX
	JR NZ,NO_TEST
	DEC B
	JR Z,TRACE_END
NO_TEST:

	LD A,0
CONT_PAGE EQU $-1
	OUT (PAGE1),A

	LD A,L
	AND 0E0H
	ADD A,32
	LD L,A
	JP NZ,TRACE_LOOP

	CALL SOUND	; играть музыку на ковоксбластере!!
	INC H
	BIT 7,H
	JP Z,TRACE_LOOP

	PUSH HL
	PUSH BC

	LD A,0FH
CORNER_1 EQU $-1
	AND 0FH
	RRCA
	RRCA
	LD C,A
	RRCA
	RRCA
	RRCA
	RRCA
	OR C
	AND 0FH
;	XOR 03H
	XOR KWADR_CONST
	LD C,A

	LD B,0
	LD HL,TABLE_TRACE
	ADD HL,BC
	ADD HL,BC
	LD (PLACE_L),HL	; НОВОЕ тонкое положение
	POP BC
	POP HL

	INC D
	RES 2,D
	LD HL,04000H
	JP TRACE_NEXT_

TRACE_END:
	LD A,0
TRACE_RET_PAGE3 EQU $-1
	OUT (PAGE3),A
	LD A,5
TRACE_RET_PAGE1 EQU $-1
	OUT (PAGE1),A
	LD A,0
	OUT (RGADR),A
	RET

;*******************************
MAKE_MAP:		; HL - положение в текущей карте.
	IN A,(PAGE1)
	PUSH AF

	LD A,(TABLE_WALL)	; карта
	OUT (PAGE1),A

	LD DE,TABLE_W	; текущие карты
	PUSH HL

	LD C,16
MAP_L1:

	LD B,16
MAP_L2:
	LD A,(HL)
	LD (DE),A
	INC HL
	INC E
	DJNZ MAP_L2

	LD A,30H
	ADD A,L
	LD L,A
	LD A,H
	ADC A,0
	LD H,A

	DEC C
	JR NZ,MAP_L1

	INC D
	POP HL
	PUSH HL
	CALL SOUND

	LD C,16
MAP_L3:
	LD B,16

	PUSH HL
MAP_L4:
	LD A,(HL)
	LD (DE),A
	LD A,L
	ADD A,40H
	LD L,A
	LD A,H
	ADC A,0
	LD H,A
	INC E
	DJNZ MAP_L4
	POP HL

	DEC HL
	DEC C
	JR NZ,MAP_L3

	INC D
	POP HL
	PUSH HL
	CALL SOUND

	LD C,16
MAP_L5:
	LD B,16
MAP_L6:
	LD A,(HL)
	LD (DE),A
	DEC HL
	INC E
	DJNZ MAP_L6

	LD A,L
	SUB 30H
	LD L,A
	LD A,H
	SBC A,0
	LD H,A

	DEC C
	JR NZ,MAP_L5

	INC D
	POP HL
	PUSH HL
	CALL SOUND

	LD C,16
MAP_L7:
	LD B,16

	PUSH HL
MAP_L8:
	LD A,(HL)
	LD (DE),A
	LD A,L
	SUB 40H
	LD L,A
	LD A,H
	SBC A,0
	LD H,A

	INC E
	DJNZ MAP_L8
	POP HL

	INC HL
	DEC C
	JR NZ,MAP_L7

	POP HL

	POP AF
	OUT (PAGE1),A
	RET

MAP_PLACE:
	LD A,(X_COORD+1)
	RRCA
	RRCA
	AND 3FH
	LD L,A

	LD A,(Y_COORD+1)
	RRCA
	RRCA
	AND 3FH

	RRCA
	RRCA
	LD H,A
	AND 0C0H
	OR L
	LD L,A

	LD A,H
	AND 0FH
	OR 50H
	LD H,A		; HL - КАРТА

	IN A,(PAGE1)
	PUSH AF
	LD A,(TABLE_WALL)
	OUT (PAGE1),A
	LD A,(HL)
	AND A
	JR Z,CONT_MOVE
	POP AF
	OUT (PAGE1),A
	SCF
	RET

CONT_MOVE:
	POP AF
	OUT (PAGE3),A
	AND A
	RET

;***************************************

SOUND_PG:	DB 0FFH
;COV_ADR:	DB 0
SND_P:		DB 0FFH
SND_A:		DW 0C000H

INIT_SOUND:
SND_INIT:
	PUSH AF
	PUSH HL
	PUSH DE
	PUSH BC
	LD B,0
	IN A,(PAGE3)
	LD E,A

	JR SND_INIT1
SOUND:
RST_SND:
	NOP
	PUSH AF
	PUSH HL

	CALL KBD_INT

	IN A,(0FEH)
	XOR 0		; covox адрес
COV_ADR EQU $-1
	AND 80H
	JP NZ,NO_LD_SND

	PUSH DE
	PUSH BC

	LD A,(COV_ADR)
	CPL
	LD B,A

	LD HL,(SND_A)
	LD C,0FBH
	LD D,16
	IN A,(PAGE3)
	LD E,A
	LD A,(SND_P)
	OUT (PAGE3),A

L_DDX:
	OUTI
	OUTI
	OUTI
	OUTI

	OUTI
	OUTI
	OUTI
	OUTI

	DEC D
	JR NZ,L_DDX

	LD (SND_A),HL

	LD A,H
	AND A
	JR NZ,NO_SNDP

SND_INIT1:
	LD H,0C2H
	LD A,(SND_P)
	LD L,A
	LD A,SYS_PAGE
	OUT (PAGE3),A
	LD A,(HL)
	LD (SND_P),A
	LD HL,0C000H
	LD (SND_A),HL

	INC A
	JR NZ,NO_SNDP
	LD A,(0C181H)	; RAM-Disk F
	LD (SND_P),A
	AND A
	JR NZ,NO_SNDP

	LD A,0C9H
	LD (RST_SND),A

NO_SNDP:

	LD A,B
	CPL
	LD (COV_ADR),A

	LD A,E
	OUT (PAGE3),A

;	CALL INTERUPT

	POP BC
	POP DE
NO_LD_SND:
	POP HL
	POP AF
	RET

;*************************************

KBD_INT:
	IN A,(COM_A)
	BIT 0,A
	RET Z
	IN A,(DAT_A)

	CP 0E0H
	JR Z,KBD_INT
	CP 0E1H
	JR Z,KBD_INT
	CP 0F0H
	JR Z,KBD_OFF

	CP 117			; KEY_UP
	JR Z,DIR_UP
	CP 114			; KEY_DN
	JR Z,DIR_DN
	CP 107			; KEY_LF
	JR Z,DIR_LF
	CP 116			; KEY_RT
	JR Z,DIR_RT

	JR KBD_INT

KBD_OFF:
	LD A,0
	LD (OFF_BYTE),A
	JR KBD_INT

KBD_INT1:
	LD A,0FFH
	LD (OFF_BYTE),A
	JR KBD_INT

OFF_BYTE: DB 0FFH

DIR_UP:
	LD A,(OFF_BYTE)
	LD (UP_),A
	JR KBD_INT1
DIR_DN:
	LD A,(OFF_BYTE)
	LD (DN_),A
	JR KBD_INT1
DIR_LF:
	LD A,(OFF_BYTE)
	LD (LF_),A
	JR KBD_INT1
DIR_RT:
	LD A,(OFF_BYTE)
	LD (RT_),A
	JR KBD_INT1

UP_:	DB 0
DN_:	DB 0
LF_:	DB 0
RT_:	DB 0

;INCLUDE INTMOUSE.ASZ

TAB_ANGLE:
	DB 0,1	; 0
	DB 1,1  ; 45
	DB 1,1  ; 45
	DB 1,0	; 90
	DB 1,0	; 90
	DB 1,-1	; 135
	DB 1,-1	; 135
	DB 0,-1	; 180
	DB 0,-1	; 180
	DB -1,-1
	DB -1,-1
	DB -1,0
	DB -1,0
	DB -1,1
	DB -1,1
	DB 0,1	; 0

TAB_ANGLE2:
	DB 0,2	; 0
	DB 1,2  ; 22
	DB 2,2  ; 45
	DB 2,1	; 67
	DB 2,0	; 90
	DB 2,-1	; 112
	DB 2,-2	; 135
	DB 1,-2	; 157
	DB 0,-2	; 180
	DB -1,-2
	DB -2,-2
	DB -2,-1
	DB -2,0
	DB -2,1
	DB -2,2
	DB -1,2	; 0

SSS2:

	.DEPHASE


;************************************************

;	DS 86F0H-$
	DS 7F0H-$
        db 'flc     C',0,80h,0,80H,80H,2,1

	END

;	RET C
;
;	LD HL,8B00H
;	LD DE,403FH
;	LD C,40H
;LOOP_PIC:
;	LD B,40H
;	LD D,40H
;LOOP_PIC1:
;	LD A,(HL)
;	LD (DE),A
;	INC HL
;	INC D
;	DJNZ LOOP_PIC1
;	DEC E
;	DEC C
;	JR NZ,LOOP_PIC
;
;	LD HL,4000H
;	LD DE,4040H
;
;LOOP_PIC2:
;	LD BC,0C0H
;	LDIR
;	LD BC,040H
;	ADD HL,BC
;	EX DE,HL
;	ADD HL,BC
;	EX DE,HL
;	LD A,D
;	CP 80H
;	JR NZ,LOOP_PIC2
;
;	CALL SND_INIT
;
;	LD C,100
;WOL_ALL:
;	LD B,7
;	LD IX,WOL1
;	INC (IX+1)
;	DEC (IX+23)
;	INC (IX+35)
;	INC (IX+34)
;	DEC (IX+44)
;
;	INC (IX+56)
;
;	JR NZ,WOL_LOOP
;	IN A,(PAGE1)
;	PUSH AF
;	LD A,0FEH
;	OUT (PAGE1),A
;	LD H,042H
;	LD L,(IX+55)
;	LD A,(HL)
;	LD (IX+55),A
;	INC A
;	JR NZ,WOL_LOOP1X
;	LD A,(04182H)
;	LD (IX+55),A
;WOL_LOOP1X:
;	POP AF
;	OUT (PAGE1),A
;
;WOL_LOOP:
;	PUSH BC
;	CALL SOUND
;	CALL WOLL
;	LD BC,11
;	ADD IX,BC
;	POP BC
;	DJNZ WOL_LOOP
;	DEC C
;
;;	EI
;;	HALT
;;	DI
;;	JR NZ,WOL_ALL
;
;	JR WOL_ALL
;
;;	LD A,7
;;	OUT (0FEH),A
;
;	RET
;
;WOL1:
;	DB 5    ; страница WOLL
;	DW 8000H; адрес WOLL
;	DB 0    ; Y-координата
;	DW 0C040H; X-координата
;	DW 0    ; ADD для высоты
;	DW 0H  ; ADD для ширины
;	DB 40H  ; ширина
;
;WOL2:
;	DB 5    ; страница WOLL
;	DW 4000H; адрес WOLL
;	DB 0    ; Y-координата
;	DW 0C080H; X-координата
;	DW 100H ; ADD для высоты
;	DW 100H ; ADD для ширины
;	DB 40H  ; ширина
;
;WOL3:
;	DB 5    ; страница WOLL
;	DW 8100H; адрес WOLL
;	DB 40H  ; Y-координата
;	DW 0C0C0H; X-координата
;	DW 100H ; ADD для высоты
;	DW 0H  ; ADD для ширины
;	DB 20H  ; ширина
;
;WOL4:
;	DB 5    ; страница WOLL
;	DW 4000H; адрес WOLL
;	DB 60H  ; Y-координата
;	DW 0C0E0H; X-координата
;	DW 0    ; ADD для высоты
;	DW 100H  ; ADD для ширины
;	DB 40H  ; ширина
;
;WOL5:
;	DB 5    ; страница WOLL
;	DW 4000H; адрес WOLL
;	DB 40H  ; Y-координата
;	DW 0C120H; X-координата
;	DW 0    ; ADD для высоты
;	DW 0H  ; ADD для ширины
;	DB 20H  ; ширина
;
;WOL6:
;	DB 5    ; страница WOLL
;	DW 4000H; адрес WOLL
;	DB 40H  ; Y-координата
;	DW 0C140H; X-координата
;	DW -200H ; ADD для высоты
;	DW 200H  ; ADD для ширины
;	DB 20H  ; ширина
;
;WOL7:
;	DB 5    ; страница WOLL
;	DW 8180H; адрес WOLL
;	DB 0    ; Y-координата
;	DW 0C160H; X-координата
;	DW 0    ; ADD для высоты
;	DW 0H ; ADD для ширины
;	DB 20H  ; ширина
;
;;	IX+0	- PAGE WOLL
;;	IX+1,2	- ADRESS WOLL
;;	IX+3 	- Y position
;;	IX+4,5	- X pozition
;;	IX+6,7	- Y-ADD-parameter
;;	IX+8,9	- X-ADD-parameter
;;	IX+10	- X-number
;
;WOLL:
;
;;	C,HL - WOLL
;;	DE - X
;;	A - Y
;;	B - ширина по X
;;	DE' - Y-add-parameter
;;	BC' - X-add-parameter
;
;	EX AF,AF'
;	IN A,(PAGE3)
;	LD (PAGE3_RET1),A
;	IN A,(PAGE1)
;	LD (PAGE1_RET1),A
;	IN A,(RGADR)
;	LD (RGADR_RET1),A
;	LD A,50H
;	OUT (PAGE3),A
;
;	LD A,(IX+0)
;	OUT (PAGE1),A
;
;	EX AF,AF'
;
;	EXX
;	EX AF,AF'
;
;	LD A,(IX+8)
;	LD (X_ADD2),A
;	LD A,(IX+9)
;	LD (X_ADD),A
;	LD A,(IX+7)
;	LD (Y_ADD),A
;	LD D,(IX+6)
;	LD E,0
;	LD C,0
;	LD H,TABLE_X/256 ; таблица высот и коэфициентов масштабирования
;	EXX
;	LD C,0
;	LD H,(IX+2)
;	LD A,(IX+1)
;	LD (WOLL_X),A
;
;	EX AF,AF'
;	LD A,(IX+3)
;	LD E,(IX+4)
;	LD D,(IX+5)
;	LD B,(IX+10)
;
;WOLL_LOOP:
;	LD L,0	; номер стенки умножить на 40h
;WOLL_X	EQU $-1
;
;	EXX
;	LD B,1
;	OUT (C),C	; масштаб - 1
;	LD D,D
;	LD B,40H	; задать длину линии
;	LD B,B
;	EXX
;	LD L,L
;	LD L,(HL)	; взять линию стенки
;	LD B,B
;LINE2:	; повтор той же линии
;	EXX
;	LD L,A
;	LD A,(HL)
;	INC H
;	LD B,(HL)	; масштаб - HIGH
;	OUT (C),A
;	INC H
;	LD D,D
;	LD B,(HL) ; задать высоту
;	LD B,B
;	DEC H
;	DEC H
;	LD A,L
;	EXX
;	OUT (RGADR),A	; задать порт Y
;	LD A,A
;	LD (DE),A ; вывести линию
;	LD B,B
;
;	INC DE 	; новое значение X
;
;	LD L,A	; сохранить Y
;
;	LD A,C
;	ADD A,0	; X-add-parameter 2
;X_ADD2	equ $-1
;	LD C,A
;     	LD A,0	; X-add-parameter
;X_ADD	equ $-1
;
;	ADC A,H
;	LD H,A	; следующая линия WOLL
;
;	EXX
;	LD A,D
;	ADD A,E
;	LD E,A
;	EXX
;	LD A,L
;	ADC A,0	; Y-add-parameter
;Y_ADD	equ $-1
;
;	DJNZ WOLL_LOOP
;
;	LD A,0
;RGADR_RET1 EQU $-1
;	OUT (RGADR),A
;	LD A,0
;PAGE3_RET1 EQU $-1
;	OUT (PAGE3),A
;	LD A,5
;PAGE1_RET1 EQU $-1
;	OUT (PAGE3),A
;
;	RET
;

;CLEAR_SCREEN:
;	LD A,0
;	OUT (0FEH),A
;	IN A,(PAGE3)
;	EX AF,AF'
;	LD A,50H
;	OUT (PAGE3),A
;
;	LD HL,0C040H
;	LD A,0
;
;	LD C,0
;CLEAR_LOOP1:
;	LD B,80H
;CLEAR_LOOP:
;	OUT (RGADR),A
;	LD D,D
;	LD D,0
;	LD C,C
;	LD (HL),C
;	INC H
;	LD (HL),C
;	LD D,D
;	LD D,80H
;	LD C,C
;	INC H
;	LD (HL),C
;	DEC H
;	DEC H
;	LD B,B
;	INC A
;	DJNZ CLEAR_LOOP
;	LD C,0
;	AND A
;	JR NZ,CLEAR_LOOP1
;
;	OUT (RGADR),A
;	EX AF,AF'
;	OUT (PAGE3),A
;	RET


