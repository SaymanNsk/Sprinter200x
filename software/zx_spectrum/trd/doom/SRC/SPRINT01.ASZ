;=============================================================
;	Функции Bios Sprinter-97.
;	Рабочая версия 16.07.97
;=============================================================
; !!!  Функции дополняются и могут быть частично изменены. !!!
;=============================================================
; LP_OPEN_WIN 	Открытие окна
; point 3D13h C=80h	Вход:	B - код окна.
;	B=0 - Spectrum 32x24	B=1 - Spectrum 64x24
;	B=2 - Spectrum 40x24	B=3 - Spectrum 80x24
;			Выход: DE - размер окна
CMD_OPEN_WIN	EQU 80H
;=============================================================
; LP_PRINT_ALL 	Вывод символов на экран с текущего знакоместа
; point 3D13h C=81h	Вход:	A - символ,
;				B - число выводимых символов,
;				Е - атрибут символа
CMD_PRINT_ALL	EQU 81H
;=============================================================
; LP_PRINT_SYM 	Вывод символов на экран с текущего знакоместа
;		без атрибута
; point 3D13h C=82h	Вход:	A - символ,
;				B - число выводимых символов,
CMD_PRINT_SYM	EQU 82H
;=============================================================
; LP_PRINT_ATR 	Вывод атрибутов на экран с текущего знакоместа
; point 3D13h C=83h	Вход:	B - число выводимых символов,
;				Е - атрибут символа
CMD_PRINT_ATR	EQU 83H
;=============================================================
; LP_SET_PLACE 	Установка текущего знакоместа
; point 3D13h C=84h	Вход:	E - знакоместо по горизонтали
;				D - знакоместо по вертикали
CMD_SET_PLACE	EQU 84H
;=============================================================
; LP_PRINT_LN	Вывод строки символов на экран с текущего
;		знакоместа
; point 3D13h C=85h	Вход:	HL - адрес строки
;				B - число выводимых символов,
;				Е - атрибут символов
CMD_PRINT_LINE	EQU 85H
;=============================================================
; LP_PRINT_LN2 	Вывод строки символов на экран с текущего
;		знакоместа без атрибутов
; point 3D13h C=86h	Вход:	HL - адрес строки
;				B - число выводимых символов,
CMD_PRINT_LINE2	EQU 86H
;=============================================================
; LP_PRINT_LN3	Вывод строки символов на экран с текущего
;		знакоместа после D выводятся пробелы
; point 3D13h C=87h	Вход:	HL - адрес строки
;				B - число выводимых символов,
;				D - разделитель
;				Е - атрибут символов
CMD_PRINT_LINE3 EQU 87H
;=============================================================
; LP_PRINT_LN4	Вывод строки символов на экран с текущего
;		знакоместа без атрибутов после D выводятся
;		пробелы
; point 3D13h C=88h	Вход:	HL - адрес строки
;				B - число выводимых символов,
;				D - разделитель
CMD_PRINT_LINE4	EQU 88H
;=============================================================
; LP_CLS_WIN	Очистка окна экрана
; point 3D13h C=89h	Вход:	DE - положение окна
;				B - атрибут очистки
;				H - высота, L - ширина
CMD_CLS_WIN	EQU 89H
;=============================================================
; LP_SCROLL_UD		; Вход : D - верхняя строка ( от 0 )
;				B = 1 - UP/ B=2 - DOWN
;				E - число скроллируемых строк
CMD_SCROLL	EQU 8AH
;=============================================================
; LP_PRINT_LN5	Вывод строки символов на экран с текущего
;		знакоместа после D ничего не выводится
; point 3D13h C=8Bh	Вход:	HL - адрес строки
;				B - число выводимых символов,
;				D - разделитель
;				Е - атрибут символов
;			Выход:  HL - последний символ + 1
CMD_PRINT_LINE5 EQU 8BH
;=============================================================
; LP_PRINT_LN6	Вывод строки символов на экран с текущего
;		знакоместа без атрибутов после D ничего не
;		выводится
; point 3D13h C=8Ch	Вход:	HL - адрес строки
;				B - число выводимых символов,
;				D - разделитель
;			Выход:  HL - последний символ + 1
CMD_PRINT_LINE6	EQU 8CH
;=============================================================
; KBD_IN		Ввод сканкода с клавиатуры без ожидания,
; point 3D13h C=8Fh	Управление клавиатурой и режимом TURBO
;	Вход:	A = 0 - ввод сканкода
;		A = 1 - отключить эмуляцию ZX-Spectrum KBD
;		A = 2 - включить эмуляцию ZX-Spectrum KBD
;		A = 3 - отключить TURBO	; A = 4 - включить TURBO
;		Выход:	Z - нет кода
;				NZ - есть код - в A
CMD_KBD_IN	EQU 8FH
;=============================================================
;	Определение объема памяти.
;	Выход:	BC - объем свободного ОЗУ в блоках по 16k
;		HL - объем всего ОЗУ в блоках по 16k
EMM_FN0		EQU 0C0H
;=============================================================
;	Инициализация распределения памяти. Стирание
;	всех RAM-дисков
EMM_FN1		EQU 0C1H
;=============================================================
; point 3D13h C=92h
;	Получить блок памяти N bytes
;	Вход:	A - номер RAM-Disk-а
;		B - число необходимых блоков
;	Выход:	A - RAM-Disk/код ошибки
;		CF - признак ошибки
;		( нет памяти/RAM-Disk существует )
EMM_FN2		EQU 92H
;=============================================================
;	Получить блок памяти N bytes
;	Вход:   B - число необходимых блоков
;	Выход:	A - идентификатор блока/код ошибки
;		CF - признак ошибки ( нет памяти )
EMM_FN2М	EQU 0C2H
;=============================================================
;	Освободить блок памяти RAM-Disk-a A
;	Вход:	A - КЛЮЧ RAM-Disk ( Clear RAM-Disk A )
EMM_FN3		EQU 93H
;=============================================================
;	Освободить блок памяти RAM-Disk-a A
;	Вход:	A - идентификатор блока
;	Выход:  CF - ошибка нет такого блока
EMM_FN3M	EQU 0C3H
;=============================================================
;	Получить страницу N RAM-Disk-a A
;	Вход:	A - КЛЮЧ RAM-Disk, B - номер страницы
;	Выход:	A - страница
EMM_FN4		EQU 94H
;=============================================================
;	Получить страницу N RAM-Disk-a A
;	Вход:	A - идентификатор блока, B - номер страницы
;	Выход:	A - страница, CF - ошибка - нет блока
EMM_FN4M	EQU 0C4H
;=============================================================
;	Получить следующую страницу RAM-Disk
;	Вход:	A - страница ОЗУ
;	Выход:	A - следующая страница ОЗУ/ L=0FFh - конец
EMM_FN5		EQU 0C7H
;=============================================================
;	Получить список страниц блока ОЗУ
;	Вход:	A - блок, HL - буфер (256 байт)
;	Выход:	(HL) - номера страниц. Конец обозначен байтом FF
;		B - число страниц в этом блоке
;		CF - ошибка (нет блока)
EMM_FN5M	EQU 0C5H
;=============================================================
;	Получение адресов портов и данных для восстановления
;	Вход:	A - номер окна проецирования
;	Выход:	B - текущие данные порта,
;		C - адрес порта окна
EMM_FN6		EQU 0C6H
;=============================================================
; point 3D13h C=98h
;	Вычисление страницы и адреса в RAM-Disk по
;	абсолютному номеру сектора
;	Вход:	A - RAM-Disk, DE - абсолютный номер сектора
;	Выход:	A - страница, HL - адрес в странице
RAMD_CALC_PAGE	EQU 98H
;=============================================================
;	..Внутренняя функция..
; открыть графическое окно, с описателем в IX
; на месте HL, E - страница режима, седьмой бит E - режим BOND
PIC_FN0		EQU 0A0H
;=============================================================
; point 3D13h C=0A1h
; ВЫВЕСТИ ТОЧКУ   вход:	dE - вертикаль, HL - горизонталь,
;		  	A - цвет точки, B - номер граф. окна
PIC_FN1		EQU 0A1H
;=============================================================
; point 3D13h C=0A2h
; ВЫВОД ЛИНИИ 'FILL'	вход: dE - вертикаль, HL - горизонталь.
;			IX - длина линии в точках, A - цвет
PIC_FN2		EQU 0A2H
;=============================================================
; point 3D13h C=0A3h
; ВЫВОД ЛИНИИ 'COPY'	вход:	dE - вертикаль, IX - горизонт.
;		A',HL' - адрес данных, откуда брать данные
;		A' - страница RAM-Disk/MEM, HL' - адрес в стр.2
;		BC' - длина данных
;		Выход:	HL',A' - следующий байт в RAM-Disk !!!
PIC_FN3		EQU 0A3H
;=============================================================
; point 3D13h C=0A4h
; ВЫВОД ПАЛИТРЫ	вход:	HL - данные палитры RGB,
;	данные в (HL) - { DB R,G,B,Y } D раз ( Y - чернобелый
;	тон для B/W режима ) ; E - начальный цвет ; D - число
;	цветов, B - маска ; A - страница PAL ( B должно быть
;	равно FFh, для полной палитры )
PIC_FN4		EQU 0A4H	; ВЫВОД ПАЛИТРЫ
CMD_SET_PAL	EQU PIC_FN4
;=============================================================
; point 3D13h C=0A5h
; УСТАНОВКА СТРАНИЦЫ ВЫВОДА НА ЭКРАН   Вход: E = 0/1
PIC_FN5		EQU 0A5H
;=============================================================
; point 3D13h C=0A6h
; Установка внутренней палитры.	A - номер, B=1 - для палитры
;	256 цветов	A = 0 - для PAL0, A = 1 для PAL1
;			A = 2 - для PAL2, A = 3 для PAL3
;	B=2 ( A=0 ) - восстановление всей стандарной палитры,
;		      загружаемой при включении
PIC_FN6		EQU 0A6H
;=============================================================
; point 3D13h C=0A7h
;////// недоделанная !!! ////////////////////////////
; Рисование линий.	Е - вертикаль, HL - горизонталь
;	H' - высота, C'/DE',B' - add_parameters	D - color
;	C' = 80h, DE' = 0, B'=0 - для вертикальных линий
;	Алгоритм:
;	     1:	Поставить точку цветом D
;       	HL,C + DE,B -> HL,C
;		dec H'
;		jr nz,1
PIC_FN7		EQU 0A7H
; point 3D13h C=0A8h
PIC_FN8		EQU 0A8H
;=============================================================
;/////// projected !!! ////////////////////////////////
;	Рисование спрайтов
;	E - вертикаль, IX - горизонталь
;	D - код увеличения/уменьшения
;	B - управляющий код
;	  0 - Вывод постоянного спрайта
;	  1 - Вывод временного спрайта
;	  2 - Восстановление картинки под временным спрайтом
;	HL - Special coding data ( данные спрайта форма, цвета.. )
;	  flick-подобный формат
PIC_FN9		EQU 0A9H
;=============================================================

CMD_SET_CONFIG	EQU 0F0H

